//
// responsive breakpoint mixin
/// @group Breakpoints
/// @access public
/// @require {Map} $breakpoints-map
/// @require {mixin} mq - breakpoint-sass main mixin
/// @require {function} breakpoints-map  - one deep $breakpoints-map
/// @require {function} first - first element of $list
/// @require {function} last - last element of $list
/// @require {function} contains - Check whether `$list` contains `$value`.
/// @require {function} str-to-list - Remove value(s) $value from $list
/// @param {list} $list
/// @content [Write the style you want to apply to the breakpoint, and it will be added within the @content directive]
/// @alias breakpoints
/// @example @include breakpoint(tiny-xs); @return @media (min-width: 320px) { @content }
/// @example @include breakpoint(huge); @return @media (min-width: 1920px) { @content }
/// @example @include breakpoint(range medium); @return @media (min-width: 769px) and (max-width: 1024px) { @content }
/// @example @include breakpoint(max-width medium-xs); @return @media (max-width: 1024px) { @content }
/// @example @include breakpoint(max-width medium); @return @media (max-width: 1024px) { @content }
//

@mixin breakpoint($list, $no-query: false){
  $query: str-to-list(inspect($list));
  $first: first($query);
  $last: last($query);
  $map: breakpoints-map();

  @if(contains(min-width max-width min-height max-height,$first) and map-has-key($map,$last)){
    $query: nth($query,1) map-get($map,nth($query,2));
  }
  @else if($first == "range"){
    $min-width: 0; $extra-px: 0; $part: 0; $break: false;
    $query: map-get($map,nth($query,2));

    @each $value in $map{
      @if(not $break){ $index : index($map,$value) !global; }
      @if(nth($value,1) == nth($list,2)){ $break: true; }

      @if($index >= 2 and nth(nth($map,$index - 1),2) == nth($value,2) and not $break){
        $min-width: nth($value,2);
      }
    }

    @if($index > 3){ $extra-px : 1; }
    @if($index <= 2) { $part: -1; }

    $query: ($min-width + $extra-px) $query + $part;
  }
  @else if(map-has-key($map,$first)){
    $query: if(length($query) == 1,
                map-get($map,$first),
                map-get($map,$first) map-get($map,$last));
  }

  @include mq($query, $no-query){
    @content;
  }
}

@mixin breakpoints($keys, $no-query: false){
  @include breakpoint($keys, $no-query){
    @content;
  }
}
